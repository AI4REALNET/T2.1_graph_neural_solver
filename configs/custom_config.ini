[DEFAULT]
env_name = "l2rpn_case14_sandbox"
env_params = {
	"NO_OVERFLOW_DISCONNECTION": True,
	"MAX_LINE_STATUS_CHANGED": 999999,
	"MAX_SUB_CHANGED": 999999,
	"NB_TIMESTEP_COOLDOWN_LINE": 0,
	"NB_TIMESTEP_COOLDOWN_SUB": 0}
chronics = {
	"train": "^((?!(.*9[0-9][0-9].*)).)*$", # # i use 994 chronics out of the 904 for training
	"val": ".*9[0-4][0-9].*", # i use 50 full chronics for validation
	"test": ".*9[5-9][0-4].*", # i use 25 full chronics for testing
	"test_ood": ".*9[5-9][5-9].*" # i use 25 full chronics for testing
	}
samples_per_chronic = {
	"initial_chronics_id": 0,
	"train": 864,
	"val": 288,
	"test": 288,
	"test_ood": 288,
	}
benchmark_seeds = {
	"train_env_seed": 1,
	"val_env_seed": 2,
	"test_env_seed": 3,
	"test_ood_topo_env_seed": 4,
	"train_actor_seed": 5,
	"val_actor_seed": 6,
	"test_actor_seed": 7,
	"test_ood_topo_actor_seed": 8,
	}
attr_x = ("prod_p", "prod_v", "load_p", "load_q")
attr_tau = ("line_status", "topo_vect")
attr_y = ("a_or", "a_ex")
eval_dict = {
	"ML": ["MSE", "MAE"],
	"Physics": [],
	"IndRed": [],
	"OOD": []}

[Benchmark3]
attr_x = ("prod_p", "prod_v", "load_p", "load_q")
attr_tau = ("line_status", "topo_vect")
attr_y = ("a_or", "a_ex", "p_or", "p_ex", "q_or", "q_ex", "prod_q", "load_v", "v_or", "v_ex", "theta_or", "theta_ex")
attr_physics = ("YBus", "SBus", "PV_nodes", "slack")
dataset_create_params = {
        "train": {},
        "test": {},
        "test_ood": {}
    }
eval_dict = {
	"ML": [],
	"Physics": [],
	"IndRed": [],
	"OOD": []}
eval_params = {
	"inf_batch_size": 10,
	"EL_tolerance": 0.04,
	"GC_tolerance": 1e-3,
	"LC_tolerance": 1e-2,
	"VOLTAGE_EQ": {"tolerance": 1e-4,
				   "verify_theta": True},
	"OHM_tolerance": 1e-2,
	"JOULE_tolerance": 1e-2,
	"KCL": {"tolerance": 1e-1,
			"verify_reactive_power": True},
	}

[Benchmark4]
attr_x = ("prod_p", "prod_v", "load_p", "load_q")
attr_tau = ("line_status", "topo_vect")
attr_y = ("a_or", "a_ex", "p_or", "p_ex", "q_or", "q_ex", "prod_q", "load_v", "v_or", "v_ex", "theta_or", "theta_ex")
attr_physics = ("YBus", "SBus", "PV_nodes", "slack")
dataset_create_params = {
        "train": {},
        "test": {},
        "test_ood": {}
    }
eval_dict = {
	"ML": [],
	"Physics": [],
	"IndRed": [],
	"OOD": []}
eval_params = {
	"inf_batch_size": 10,
	"EL_tolerance": 0.04,
	"GC_tolerance": 1e-3,
	"LC_tolerance": 1e-2,
	"VOLTAGE_EQ": {"tolerance": 1e-4,
				   "verify_theta": True},
	"OHM_tolerance": 1e-2,
	"JOULE_tolerance": 1e-2,
	"KCL": {"tolerance": 1e-1,
			"verify_reactive_power": True},
	}
	